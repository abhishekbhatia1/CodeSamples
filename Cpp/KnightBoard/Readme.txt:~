Readme.txt:
1) This file describes the folder contents of the directory Cruise_Technical_Challenge

Directory Structure:
1) pdf directory contains Cruise Technical Challenge (KnightBoard.pdf) document that describes the problem statement and the KnightBoardSolution.pdf that describes my approach.
2) include directory contains the KnightBoard.h header file that contains the KnightBoard class declaration 
3) src directory contains the KnightBoard.cpp file that contains the method definitions of the KnightBoard class and main.cpp source file that parses the input file, utilizes the KnightBoard class and generates the output
4) build directory contains the build files including the Makefile
5) input directory contains the input files
6) output directory contains the output files corresponding to each level

Important Files:
1) test1_kb.txt, test2_kb.txt, and test3_kb.txt are the input files
2) CMakeLists.txt is the cmake file that links the header files and source files 
3) exec.sh is an executable file that generates a build directory, dumps the cmake build output (including the Makefile) in it and generates the main executable 
4) main is the executable generated by the Makefile that reads the input, executes the code and dumps the output to standard output

Approach:

Compiling and Executing the code:
1) Compile: ./exec.sh
2) Execute: ./main input.txt Level

Sample Commandlines:
./exec.sh; ./main input/test1_kb.txt 1 > output/out_level1.txt
./exec.sh; ./main input/test2_kb.txt 2 > output/out_level2.txt
./exec.sh; ./main input/test2_kb.txt 3 > output/out_level3.txt
./exec.sh; ./main input/test2_kb.txt 4 > output/out_level4.txt
./exec.sh; ./main input/test2_kb.txt 5 > output/out_level5.txt

Input File Format:
board size
start location
goal location
number of move sequences to verify (0 to n)
n move sequences to verify
more board constraints (0/1)
board initial state