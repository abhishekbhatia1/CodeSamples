Readme.txt:
1) This file describes the folder contents of the directory Tesla_Coding_Challenge

Directory Structure:
1) pdf directory contains Tesla Coding Challenge pdf document that describes the problem statement
2) include directory contains the TCC.h header file that contains the TCC class declaration 
3) src directory contains the TCC.cpp file that contains the method definitions of the TCC class and main.cpp source file that parses the input.txt file, utilizes the TCC class and generates the output.txt
4) build directory contains the build files including the Makefile

Important Files:
1) input.txt is the input file
2) CMakeLists.txt is the cmake file that links the header files and source files 
3) exec.sh is an executable file that generates a build directory, dumps the cmake build output (including the Makefile) in it and generates the main executable 
4) main is the executable generated by the Makefile that reads input.txt, executes the code and dumps the output to standard output

Approach:
1) This problem can be seen as a graph problem. 
2) Each left hand side represents a parent node and right hand side represents the child node of that parent. 
3) These children may further have more children and so on. 
4) Once this graph is constructed we simply traverse it in a dfs manner. 
5) In this dfs we first reach the leaf nodes, then move up the tree and evaluate the intermediate node only if all its child nodes are evaluated.
6) The value of all intermediate nodes is just the sum of children nodes.

Compiling and Executing the code;
1) Compile: ./exec.sh
2) Execute: ./main input.txt